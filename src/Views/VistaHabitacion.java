/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Models.Dao.DaoException;
import Models.Dao.HabitacionDao;
import Models.Habitacion;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.Component;
import java.awt.Color;

class EstadoCellRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(javax.swing.JTable table,
            Object value, boolean isSelected, boolean hasFocus, int row, int column) {

        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        if (value != null) {
            String estado = value.toString().toUpperCase();

            switch (estado) {
                case "DISPONIBLE":
                    c.setBackground(new Color(144, 238, 144)); // verde claro
                    break;
                    
                case "OCUPADA":
                    c.setBackground(new Color(255, 255, 153)); // amarillo suave
                    break;
                    
                case "CLAUSURADA":
                    c.setBackground(new Color(255, 102, 102)); // rojo claro
                    break;
                    
                default:
                    c.setBackground(Color.WHITE);
                    break;
            }
        } else {
            c.setBackground(Color.WHITE);
        }

        // Si está seleccionada, mantené el color de selección
        if (isSelected) {
            c.setBackground(new Color(100, 150, 255));
        }

        return c;
    }
}

/**
 *
 * @author lisan
 */
public class VistaHabitacion extends javax.swing.JFrame {

    /**
     * Creates new form Vista1
     */
    public VistaHabitacion() {
        
        initComponents();
        try {
            habitacionDao = HabitacionDao.getInstance();
        } catch (DaoException ex) {
            Logger.getLogger(VistaHabitacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        cargarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHabitaciones = new javax.swing.JTable();
        btnAddHabitacion = new javax.swing.JButton();
        btnDeleteHabitacion = new javax.swing.JButton();
        btnUpdateHabitacion = new javax.swing.JButton();
        lblHabitaciones = new javax.swing.JLabel();
        btnMenu1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HABITACIONES");
        setBackground(new java.awt.Color(255, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setName("VHabitaciones"); // NOI18N

        tblHabitaciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tblHabitaciones.setForeground(new java.awt.Color(0, 0, 0));
        tblHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Numero", "Tipo", "Capacidad", "Precio Base", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHabitaciones);

        btnAddHabitacion.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 24)); // NOI18N
        btnAddHabitacion.setText("+");
        btnAddHabitacion.setToolTipText("AGREGAR HABITACION");
        btnAddHabitacion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddHabitacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAddHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHabitacionActionPerformed(evt);
            }
        });

        btnDeleteHabitacion.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 24)); // NOI18N
        btnDeleteHabitacion.setText("-");
        btnDeleteHabitacion.setToolTipText("BORRAR HABITACION");
        btnDeleteHabitacion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteHabitacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDeleteHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHabitacionActionPerformed(evt);
            }
        });

        btnUpdateHabitacion.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 24)); // NOI18N
        btnUpdateHabitacion.setText("ACTUALIZAR HABITACION");
        btnUpdateHabitacion.setToolTipText("ACTUALIZAR HABITACION");
        btnUpdateHabitacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateHabitacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnUpdateHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHabitacionActionPerformed(evt);
            }
        });

        lblHabitaciones.setBackground(new java.awt.Color(255, 255, 204));
        lblHabitaciones.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 36)); // NOI18N
        lblHabitaciones.setForeground(new java.awt.Color(0, 0, 0));
        lblHabitaciones.setText("HABITACIONES");
        lblHabitaciones.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblHabitaciones.setName(""); // NOI18N

        btnMenu1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnMenu1.setText("MENU");
        btnMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenu1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnAddHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateHabitacion, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMenu1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHabitaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenu1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenu1ActionPerformed
        // TODO add your handling code here:
        VistaMenu1 vMenu1 = new VistaMenu1();
        vMenu1.setVisible(true);
        vMenu1.setLocationRelativeTo(null);
        
        this.dispose();
    }//GEN-LAST:event_btnMenu1ActionPerformed

    private void btnAddHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHabitacionActionPerformed
        // TODO add your handling code here:
        VistaAddHabitacion vAddHabitacion = new VistaAddHabitacion();
        vAddHabitacion.setVisible(true);
        vAddHabitacion.setLocationRelativeTo(null);
        
        this.dispose();
    }//GEN-LAST:event_btnAddHabitacionActionPerformed

    private void btnDeleteHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHabitacionActionPerformed
        // TODO add your handling code here:
        int fila = tblHabitaciones.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this,
                "Selecciona una habitación primero.",
                "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id = (int) tblHabitaciones.getValueAt(fila, 0);
        String estado = tblHabitaciones.getValueAt(fila, 5).toString(); // asumiendo que la columna 5 es “estado”

        if (estado.equalsIgnoreCase("CLAUSURADA")) {
            JOptionPane.showMessageDialog(this,
                "La habitación ya está clausurada.",
                "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
            this,
            "¿Seguro que querés clausurar esta habitación?",
            "Confirmar acción",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                HabitacionDao habitacionDao = HabitacionDao.getInstance();
                habitacionDao.clausurar(id);

                JOptionPane.showMessageDialog(this,
                    "Habitación clausurada correctamente.",
                    "Éxito", JOptionPane.INFORMATION_MESSAGE);

                cargarTabla();

            } catch (DaoException e) {
                JOptionPane.showMessageDialog(this,
                    "Error al clausurar la habitación:\n" + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteHabitacionActionPerformed

    private void btnUpdateHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHabitacionActionPerformed
        // TODO add your handling code here:
        int fila = tblHabitaciones.getSelectedRow();
        
        if (fila == -1) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Seleccioná una habitación para editar.",
                "Sin selección",
                javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Crear el objeto Habitacion con los datos de la fila
        int id = Integer.parseInt(tblHabitaciones.getValueAt(fila, 0).toString());
        String numero = tblHabitaciones.getValueAt(fila, 1).toString();
        String tipo = tblHabitaciones.getValueAt(fila, 2).toString();
        int capacidad = Integer.parseInt(tblHabitaciones.getValueAt(fila, 3).toString());
        double precio = Double.parseDouble(tblHabitaciones.getValueAt(fila, 4).toString());
        String estado = tblHabitaciones.getValueAt(fila, 5).toString();

        Models.Habitacion h = new Models.Habitacion(id, numero, tipo, capacidad, precio, estado);

        Views.VistaAddHabitacion vistaEditar = new Views.VistaAddHabitacion(h);
        vistaEditar.setVisible(true);
        vistaEditar.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnUpdateHabitacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaHabitacion().setVisible(true);
            }
        });
    }
    
    private void cargarTabla() {
        
        String[] columnas = {"id", "Numero", "Tipo", "Capacidad", "Precio", "Estado"};

        // modelo de tabla
        DefaultTableModel modelo = new DefaultTableModel(null, columnas) {
            @Override public boolean isCellEditable(int row, int column) { return false; }
        };

        try {
            
            List<Habitacion> lista = habitacionDao.findAll();

            
            for (Habitacion h : lista) {
                Object[] fila = {
                    h.getId(),
                    h.getNumero(),
                    h.getTipo(),
                    h.getCapacidad(),
                    h.getPrecioBase(), 
                    h.getEstado()
                };
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            
            javax.swing.JOptionPane.showMessageDialog(this, "No se pudieron cargar las habitaciones:\n" + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

        // Aplica el modelo a la tabla
        tblHabitaciones.setModel(modelo);

       
        if (tblHabitaciones.getColumnModel().getColumnCount() >= 6) {
            tblHabitaciones.getColumnModel().getColumn(0).setPreferredWidth(40);  // ID
            tblHabitaciones.getColumnModel().getColumn(1).setPreferredWidth(70);  // Número
            tblHabitaciones.getColumnModel().getColumn(2).setPreferredWidth(120); // Tipo
            tblHabitaciones.getColumnModel().getColumn(3).setPreferredWidth(90);  // Capacidad
            tblHabitaciones.getColumnModel().getColumn(4).setPreferredWidth(90);  // Precio
            tblHabitaciones.getColumnModel().getColumn(5).setPreferredWidth(110); // Estado
        }
        tblHabitaciones.getColumnModel()
        .getColumn(5)
        .setCellRenderer(new EstadoCellRenderer());

    }
    
    private Models.Dao.HabitacionDao habitacionDao;
    
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHabitacion;
    private javax.swing.JButton btnDeleteHabitacion;
    private javax.swing.JButton btnMenu1;
    private javax.swing.JButton btnUpdateHabitacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHabitaciones;
    private javax.swing.JTable tblHabitaciones;
    // End of variables declaration//GEN-END:variables
}
